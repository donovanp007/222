(()=>{var e={};e.id=772,e.ids=[772],e.modules={2131:()=>{},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29021:e=>{"use strict";e.exports=require("fs")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{"use strict";e.exports=require("path")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},62379:()=>{},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},88381:(e,t,s)=>{"use strict";s.r(t),s.d(t,{patchFetch:()=>f,routeModule:()=>p,serverHooks:()=>y,workAsyncStorage:()=>g,workUnitAsyncStorage:()=>w});var a={};s.r(a),s.d(a,{GET:()=>u,HEAD:()=>m});var r=s(14347),n=s(15924),o=s(50347),i=s(6106);async function u(){let e=Date.now();try{let e=new Headers().get("authorization"),t=process.env.HEALTH_CHECK_TOKEN;if(t&&e!==`Bearer ${t}`)return i.NextResponse.json({status:"healthy",timestamp:new Date().toISOString(),message:"Service is running"},{status:200});let s=[],a={database:{status:"healthy",lastCheck:new Date().toISOString()},redis:{status:"healthy",lastCheck:new Date().toISOString()},filesystem:{status:"healthy",lastCheck:new Date().toISOString()},memory:{status:"healthy",lastCheck:new Date().toISOString()}},r=await c();s.push(r),a.memory={status:"pass"===r.status?"healthy":"warn"===r.status?"degraded":"unhealthy",message:r.message,lastCheck:new Date().toISOString()};let n=await l();s.push(n),a.filesystem={status:"pass"===n.status?"healthy":"warn"===n.status?"degraded":"unhealthy",message:n.message,lastCheck:new Date().toISOString()};let o=await h();s.push(o),a.database={status:"pass"===o.status?"healthy":"warn"===o.status?"degraded":"unhealthy",message:o.message,responseTime:o.duration,lastCheck:new Date().toISOString()};let u=await d();s.push(u),a.redis={status:"pass"===u.status?"healthy":"warn"===u.status?"degraded":"unhealthy",message:u.message,responseTime:u.duration,lastCheck:new Date().toISOString()};let m=s.some(e=>"fail"===e.status),p=s.some(e=>"warn"===e.status),g=m?"unhealthy":p?"degraded":"healthy",w={status:g,timestamp:new Date().toISOString(),uptime:Math.floor(process.uptime()),version:process.env.npm_package_version||"1.0.0",environment:"production",services:a,checks:s};return i.NextResponse.json(w,{status:"healthy"===g||"degraded"===g?200:503,headers:{"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache",Expires:"0"}})}catch(t){return console.error("Health check failed:",t),i.NextResponse.json({status:"unhealthy",timestamp:new Date().toISOString(),uptime:Math.floor(process.uptime()),version:process.env.npm_package_version||"1.0.0",environment:"production",error:t instanceof Error?t.message:"Unknown error",checks:[{name:"health_check_execution",status:"fail",message:`Health check execution failed: ${t instanceof Error?t.message:"Unknown error"}`,duration:Date.now()-e}]},{status:503})}}async function c(){let e=Date.now();try{let t=process.memoryUsage(),s=Math.round(t.heapUsed/1024/1024);t.heapTotal;let a=Math.round(t.rss/1024/1024),r="pass",n=`Memory usage: ${s}MB heap, ${a}MB RSS`;return s>1500||a>1500?(r="fail",n+=" - CRITICAL: Memory usage is very high"):(s>800||a>800)&&(r="warn",n+=" - WARNING: Memory usage is elevated"),{name:"memory_usage",status:r,message:n,duration:Date.now()-e}}catch(t){return{name:"memory_usage",status:"fail",message:`Failed to check memory usage: ${t instanceof Error?t.message:"Unknown error"}`,duration:Date.now()-e}}}async function l(){let e=Date.now();try{let t=s(29021).promises,a=s(33873).join(process.cwd(),"temp-health-check.txt"),r=`Health check - ${new Date().toISOString()}`;await t.writeFile(a,r);let n=await t.readFile(a,"utf8");if(await t.unlink(a),n===r)return{name:"filesystem_access",status:"pass",message:"Filesystem read/write operations successful",duration:Date.now()-e};return{name:"filesystem_access",status:"fail",message:"Filesystem data integrity check failed",duration:Date.now()-e}}catch(t){return{name:"filesystem_access",status:"fail",message:`Filesystem check failed: ${t instanceof Error?t.message:"Unknown error"}`,duration:Date.now()-e}}}async function h(){let e=Date.now();try{return{name:"database_simulation",status:"pass",message:"Database simulation check passed (localStorage-based)",duration:Date.now()-e}}catch(t){return{name:"database_check",status:"fail",message:`Database check failed: ${t instanceof Error?t.message:"Unknown error"}`,duration:Date.now()-e}}}async function d(){let e=Date.now();try{if(!process.env.REDIS_URL)return{name:"redis_config",status:"warn",message:"Redis URL not configured (using localStorage)",duration:Date.now()-e};return{name:"redis_simulation",status:"pass",message:"Redis simulation check passed (localStorage-based)",duration:Date.now()-e}}catch(t){return{name:"redis_check",status:"fail",message:`Redis check failed: ${t instanceof Error?t.message:"Unknown error"}`,duration:Date.now()-e}}}async function m(){return new i.NextResponse(null,{status:200})}let p=new r.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/health/route",pathname:"/api/health",filename:"route",bundlePath:"app/api/health/route"},resolvedPagePath:"C:\\Users\\donov\\Music\\ai-medic-scribe-stable-backup\\ai-medic-scribe\\src\\app\\api\\health\\route.ts",nextConfigOutput:"standalone",userland:a}),{workAsyncStorage:g,workUnitAsyncStorage:w,serverHooks:y}=p;function f(){return(0,o.patchFetch)({workAsyncStorage:g,workUnitAsyncStorage:w})}}};var t=require("../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),a=t.X(0,[247,162],()=>s(88381));module.exports=a})();